drop table if exists goldusers_signup;
CREATE TABLE goldusers_signup(userid integer,gold_signup_date date); 

INSERT INTO goldusers_signup(userid,gold_signup_date) 
 VALUES (1,'09-22-2017'),
(3,'04-21-2017');

drop table if exists users;
CREATE TABLE users(userid integer,signup_date date); 

INSERT INTO users(userid,signup_date) 
 VALUES (1,'09-02-2014'),
(2,'01-15-2015'),
(3,'04-11-2014');

drop table if exists sales;
CREATE TABLE sales(userid integer,created_date date,product_id integer); 

INSERT INTO sales(userid,created_date,product_id) 
 VALUES (1,'04-19-2017',2),
(3,'12-18-2019',1),
(2,'07-20-2020',3),
(1,'10-23-2019',2),
(1,'03-19-2018',3),
(3,'12-20-2016',2),
(1,'11-09-2016',1),
(1,'05-20-2016',3),
(2,'09-24-2017',1),
(1,'03-11-2017',2),
(1,'03-11-2016',1),
(3,'11-10-2016',1),
(3,'12-07-2017',2),
(3,'12-15-2016',2),
(2,'11-08-2017',2),
(2,'09-10-2018',3);


drop table if exists product;
CREATE TABLE product(product_id integer,product_name text,price integer); 

INSERT INTO product(product_id,product_name,price) 
 VALUES
(1,'p1',980),
(2,'p2',870),
(3,'p3',330);


select * from sales;
select * from product
select * from goldusers_signup;
select * from users;

--what is the total amount each customer spent on zomato?

select s.userid,sum(price) total_amount 
from product p
join sales s on p.product_id=s.product_id
group by s.userid

-- How many days has each customer visited zomato?

select userid,count(distinct created_date) no_of_days 
from sales
group by userid;

--what was the first product purchased by the customer?
with first_product as
(
select s.userid,s.created_date,p.product_id,
dense_rank()over( partition by s.userid order by s.created_date) as rnk
from sales s
join product p on s.product_id=p.product_id
)

select userid, product_id 
from first_product 
where rnk=1
group by userid,product_id;

--What is the most purchased item on the menu and how many times was it purchased by all customers?
select userid,count(product_id) cnt from sales where product_id=
(select top 1 product_id cnt_of_product 
from sales
group by userid,product_id
order by count(product_id) desc)
group by userid;


----Which item was the most popular for each customer?
with fav_item as(
select userid, product_id,COUNT(product_id) cnt,
dense_rank() over( partition by userid order by COUNT(product_id) desc) as rnk 
from sales
group by userid,product_id
)
select userid,product_id 
from fav_item
where rnk = 1
group by userid,product_id;

----Which item was purchased first by the customer after they became a member?
with cte as(
select s.userid,s.created_date,g.gold_signup_date, s.product_id, 
dense_rank() over( partition by s.userid order by s.created_date) as rnk
from sales s join goldusers_signup g
on s.userid=g.userid
where s.created_date>=g.gold_signup_date
)

select userid,created_date,gold_signup_date,product_id
from cte where rnk = 1

--Which item was purchased first by the customer before they became a member?

with cte as(
select s.userid,s.created_date,g.gold_signup_date, s.product_id, 
dense_rank() over( partition by s.userid order by s.created_date desc) as rnk
from sales s join goldusers_signup g
on s.userid=g.userid
where s.created_date<=g.gold_signup_date
)

select userid,created_date,gold_signup_date,product_id
from cte where rnk = 1;

--What is the total orders and amount spent for each member before they became a member?

--select s.userid,count( distinct p.product_id) total_orders, sum(p.price) amount_spent
with cte as(
select s.userid,s.product_id ,s.created_date,g.gold_signup_date 
from sales s
join goldusers_signup g on s.userid=g.userid
join product p on p.product_id=s.product_id
where s.created_date<=g.gold_signup_date
)
select userid,COUNT(created_date) total_orders,sum(price) amount_spent from
(select a.userid ,a.product_id,a.created_date,a.gold_signup_date, p.price 
from cte a join product p on p.product_id=a.product_id)c
group by userid

/*If buying each product generates points for eg 5rs = 2zomato point and each product has different purchasing points
for eg for p1 5rs= 1 zomato point , for p2 10rs = 5 zomato point and for p3 5rs= 1zomato point
calculate points collected by each customers and for which product most points have been given till now.
*/
select d.userid, sum(total_points)*2.5 total_cashback_earned from
(select c.*,amt/point total_points from
(select b.*, case when product_id=1 then 5 when product_id=2 then 2 when product_id=3 then 5 else 0 end as point from
(select a.userid,product_id,sum(price) amt from
(select s.*, p.price from sales s 
join product p on s. product_id=p.product_id)a
group by userid,product_id)b)c)d
group by userid



select * from(
select *, DENSE_RANK() over (order by total_point_earned desc) rnk from(
select product_id,sum(total_points) total_point_earned from
(select c.*,amt/point total_points from
(select b.*, case when product_id=1 then 5 when product_id=2 then 2 when product_id=3 then 5 else 0 end as point from
(select a.userid,product_id,sum(price) amt from
(select s.*, p.price from sales s 
join product p on s. product_id=p.product_id)a
group by userid,product_id)b)c)d)e
group by product_id)e where rnk = 1 

-- rank all the transaction of the customer

select *, rank() over(partition by userid order by created_date) rnk from sales

--rank all the transactions for each memeber whenever they are a zomato gold memeber for every non memeber transaction as na.



select a.*, case when gold_signup_date is null then 'na' 
else rank() over( partition by s.userid order by g.gold_signup_date) end as rnk from
(select s.userid,s.product_id ,s.created_date,g.gold_signup_date
from sales s left join goldusers_signup g
on s.userid=g.userid
and created_date>=gold_signup_date)a
